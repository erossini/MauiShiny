@page "/speech"
@implements IDisposable
@inject Shiny.SpeechRecognition.ISpeechRecognizer speech

<PageTitle>Speech Recognition</PageTitle>
<h1>Speech Recognition</h1>

<div>Status: @status</div>

<button
    class="@(isListening ? "btn btn-success" : "btn btn-danger")"
    @onclick="Toggle">@(isListening ? "Stop" : "Start")</button>

<div>@transcript</div>

@code
{
    IDisposable? sub;
    bool isListening = false;
    string status = "Unknown";
    string transcript = String.Empty;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.status = (await speech.RequestAccess()).ToString();
    }


    void Toggle()
    {
        if (this.sub == null)
        {
            this.transcript = String.Empty;

            this.sub = this.speech
                .ContinuousDictation()
                .Subscribe(x =>
                {
                    this.transcript += " " + x;
                    this.StateHasChanged();
                });

            this.isListening = true;
        }
        else
        {
            this.Stop();
        }
    }


    void Stop()
    {
        this.isListening = false;
        this.sub?.Dispose();
        this.sub = null;
    }


    public void Dispose() => this.Stop();
}